{"ast":null,"code":"// import React, {Suspense, useContext} from \"react\";\n// import \"./twitter.scss\";\n// import Loading from \"../loading/Loading\";\n// import {TwitterTimelineEmbed} from \"react-twitter-embed\";\n// import {twitterDetails} from \"../../portfolio\";\n// import StyleContext from \"../../contexts/StyleContext\";\n\n// const renderLoader = () => <Loading />;\n// const cantDisplayError =\n//   \"<div className='centerContent'><h2>Can't load? Check privacy protection settings</h2></div>\";\n\n// function timeOut() {\n//   setTimeout(function () {\n//     if (!document.getElementById(\"twitter\").innerHTML.includes(\"iframe\")) {\n//       document.getElementById(\"twitter\").innerHTML = cantDisplayError;\n//     }\n//   }, 10000);\n// }\n// var widthScreen = window.screen.width;\n\n// export default function Twitter() {\n//   const {isDark} = useContext(StyleContext);\n\n//   if (!twitterDetails.display) {\n//     return null;\n//   }\n//   if (!twitterDetails.userName) {\n//     console.error(\"Twitter username for twitter section is missing\");\n//   }\n//   if (twitterDetails.userName) {\n//     return (\n//       <Suspense fallback={renderLoader()}>\n//         <div className=\"tw-main-div\" id=\"twitter\">\n//           <div className=\"centerContent\">\n//             <TwitterTimelineEmbed\n//               sourceType=\"profile\"\n//               screenName={twitterDetails.userName}\n//               options={{height: 400, width: {widthScreen}}}\n//               placeholder={renderLoader()}\n//               autoHeight={false}\n//               borderColor=\"#fff\"\n//               key={isDark ? \"1\" : \"2\"}\n//               theme={isDark ? \"dark\" : \"light\"}\n//               noFooter={true}\n//               onload={timeOut()}\n//             />\n//           </div>\n//         </div>\n//       </Suspense>\n//     );\n//   } else {\n//     return null;\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/aishwaryasheelvant/Desktop/developerFolio/src/containers/twitter-embed/twitter.js"],"sourcesContent":["// import React, {Suspense, useContext} from \"react\";\n// import \"./twitter.scss\";\n// import Loading from \"../loading/Loading\";\n// import {TwitterTimelineEmbed} from \"react-twitter-embed\";\n// import {twitterDetails} from \"../../portfolio\";\n// import StyleContext from \"../../contexts/StyleContext\";\n\n// const renderLoader = () => <Loading />;\n// const cantDisplayError =\n//   \"<div className='centerContent'><h2>Can't load? Check privacy protection settings</h2></div>\";\n\n// function timeOut() {\n//   setTimeout(function () {\n//     if (!document.getElementById(\"twitter\").innerHTML.includes(\"iframe\")) {\n//       document.getElementById(\"twitter\").innerHTML = cantDisplayError;\n//     }\n//   }, 10000);\n// }\n// var widthScreen = window.screen.width;\n\n// export default function Twitter() {\n//   const {isDark} = useContext(StyleContext);\n\n//   if (!twitterDetails.display) {\n//     return null;\n//   }\n//   if (!twitterDetails.userName) {\n//     console.error(\"Twitter username for twitter section is missing\");\n//   }\n//   if (twitterDetails.userName) {\n//     return (\n//       <Suspense fallback={renderLoader()}>\n//         <div className=\"tw-main-div\" id=\"twitter\">\n//           <div className=\"centerContent\">\n//             <TwitterTimelineEmbed\n//               sourceType=\"profile\"\n//               screenName={twitterDetails.userName}\n//               options={{height: 400, width: {widthScreen}}}\n//               placeholder={renderLoader()}\n//               autoHeight={false}\n//               borderColor=\"#fff\"\n//               key={isDark ? \"1\" : \"2\"}\n//               theme={isDark ? \"dark\" : \"light\"}\n//               noFooter={true}\n//               onload={timeOut()}\n//             />\n//           </div>\n//         </div>\n//       </Suspense>\n//     );\n//   } else {\n//     return null;\n//   }\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}